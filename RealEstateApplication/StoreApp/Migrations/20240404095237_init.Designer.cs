// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace RealEstateApp.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20240404095237_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowCase")
                        .HasColumnType("bit");

                    b.Property<short>("buildingAgeId")
                        .HasColumnType("smallint");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("floorLevelId")
                        .HasColumnType("smallint");

                    b.Property<short>("furnitureConditionId")
                        .HasColumnType("smallint");

                    b.Property<short>("numberOfRoomsId")
                        .HasColumnType("smallint");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short?>("productFeatureid")
                        .HasColumnType("smallint");

                    b.Property<short>("propertyTypeId")
                        .HasColumnType("smallint");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("totalSquareFootage")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("productFeatureid");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            id = 1,
                            ImageUrl = "/images/images1.jpg",
                            ShowCase = true,
                            buildingAgeId = (short)1,
                            description = "Harika manzaralı muhteşem bir gayrimenkul. Eşsiz doğa ve deniz manzarasına sahip olan bu mülk, lüks ve konforu bir araya getiriyor.",
                            floorLevelId = (short)4,
                            furnitureConditionId = (short)6,
                            numberOfRoomsId = (short)12,
                            price = 12345678m,
                            propertyTypeId = (short)19,
                            title = "MUHTEŞEM DENİZ MANZARALI VİLLA",
                            totalSquareFootage = 100
                        },
                        new
                        {
                            id = 2,
                            ImageUrl = "/images/images2.jpg",
                            ShowCase = true,
                            buildingAgeId = (short)2,
                            description = "Geniş ve iyi tasarlanmış daire satılık. Ferah iç mekanları ve modern tasarımı ile bu daire aileler için mükemmel bir seçenek.",
                            floorLevelId = (short)5,
                            furnitureConditionId = (short)7,
                            numberOfRoomsId = (short)13,
                            price = 9875643m,
                            propertyTypeId = (short)20,
                            title = "SAHİLE YAKIN LÜKS DAİRE",
                            totalSquareFootage = 150
                        },
                        new
                        {
                            id = 3,
                            ImageUrl = "/images/images3.jpg",
                            ShowCase = true,
                            buildingAgeId = (short)3,
                            description = "Huzurlu bir mahallede şirin bir ev. Sessiz ve sakin çevresiyle bu ev, huzurlu bir yaşam tarzını arayanlar için ideal bir tercih.",
                            floorLevelId = (short)4,
                            furnitureConditionId = (short)8,
                            numberOfRoomsId = (short)14,
                            price = 333225688m,
                            propertyTypeId = (short)21,
                            title = "HUZURLU ŞEHİR EVDEN EVE TAŞINMAYA HAZIR",
                            totalSquareFootage = 80
                        },
                        new
                        {
                            id = 4,
                            ImageUrl = "/images/images4.jpg",
                            ShowCase = true,
                            buildingAgeId = (short)1,
                            description = "Zarif penthouse, üstün olanaklarla dolu. Modern ve lüks tasarımıyla bu penthouse yaşam tarzınızı yükseltiyor.",
                            floorLevelId = (short)5,
                            furnitureConditionId = (short)9,
                            numberOfRoomsId = (short)15,
                            price = 9999999m,
                            propertyTypeId = (short)22,
                            title = "LÜKS PENTHOUSE DAİRE",
                            totalSquareFootage = 90
                        },
                        new
                        {
                            id = 5,
                            ImageUrl = "/images/images5.jpg",
                            ShowCase = true,
                            buildingAgeId = (short)2,
                            description = "Şehrin kalbinde modern bir loft. Merkezi konumu ve şık tasarımıyla bu loft, şehir hayatının tadını çıkarmak isteyenler için mükemmel bir seçenek.",
                            floorLevelId = (short)4,
                            furnitureConditionId = (short)10,
                            numberOfRoomsId = (short)16,
                            price = 223344555m,
                            propertyTypeId = (short)23,
                            title = "ŞEHİR MERKEZİNDE MODERN LOFT",
                            totalSquareFootage = 56
                        },
                        new
                        {
                            id = 6,
                            ImageUrl = "/images/images6.jpg",
                            ShowCase = true,
                            buildingAgeId = (short)3,
                            description = "Deniz kenarında keyifli bir tatil evi. Kumlu plajlara yakın olan bu ev, yaz aylarında huzur dolu bir tatil imkanı sunuyor.",
                            floorLevelId = (short)5,
                            furnitureConditionId = (short)11,
                            numberOfRoomsId = (short)17,
                            price = 1240000m,
                            propertyTypeId = (short)24,
                            title = "BAHÇELİ MÜSTAKİL EV",
                            totalSquareFootage = 89
                        },
                        new
                        {
                            id = 7,
                            ImageUrl = "/images/images7.jpg",
                            ShowCase = true,
                            buildingAgeId = (short)1,
                            description = "Doğayla iç içe havuzlu bir villa. Muhteşem bahçesi ve özel havuzuyla bu villa, doğal güzelliklerle çevrili lüks bir yaşam sunuyor.",
                            floorLevelId = (short)4,
                            furnitureConditionId = (short)6,
                            numberOfRoomsId = (short)18,
                            price = 234444m,
                            propertyTypeId = (short)25,
                            title = "DOĞA İLE İÇ İÇE HAVUZLU VİLLA",
                            totalSquareFootage = 110
                        },
                        new
                        {
                            id = 8,
                            ImageUrl = "/images/images8.jpg",
                            ShowCase = true,
                            buildingAgeId = (short)2,
                            description = "Gölet manzaralı modern bir daire. Doğal güzellikleri iç mekanlara taşıyan bu daire, huzurlu ve sakin bir yaşam sunuyor.",
                            floorLevelId = (short)5,
                            furnitureConditionId = (short)7,
                            numberOfRoomsId = (short)12,
                            price = 2300000m,
                            propertyTypeId = (short)26,
                            title = "SUNİ GÖLET MANZARALI DAİRE",
                            totalSquareFootage = 140
                        },
                        new
                        {
                            id = 9,
                            ImageUrl = "/images/images9.jpg",
                            ShowCase = true,
                            buildingAgeId = (short)3,
                            description = "Köy yaşamının keyfini çıkarın. Yeşillikler arasında yer alan bu köy evi, geleneksel ve huzurlu bir yaşam tarzı sunuyor.",
                            floorLevelId = (short)4,
                            furnitureConditionId = (short)8,
                            numberOfRoomsId = (short)13,
                            price = 540000m,
                            propertyTypeId = (short)27,
                            title = "YEŞİL BİR CENNETTE KÖY EVİ",
                            totalSquareFootage = 70
                        },
                        new
                        {
                            id = 10,
                            ImageUrl = "/images/images10.jpg",
                            ShowCase = true,
                            buildingAgeId = (short)1,
                            description = "Ulaşımı kolay merkezi konum. Şehir merkezine yakın olan bu ev, iş ve sosyal aktivitelere ulaşımı kolaylaştırıyor.",
                            floorLevelId = (short)5,
                            furnitureConditionId = (short)9,
                            numberOfRoomsId = (short)14,
                            price = 100000m,
                            propertyTypeId = (short)28,
                            title = "ULAŞIMI KOLAY MERKEZİ KONUM",
                            totalSquareFootage = 70
                        });
                });

            modelBuilder.Entity("Domain.Models.ProductFeature", b =>
                {
                    b.Property<short>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("id"));

                    b.Property<short>("productFeatureGroupId")
                        .HasColumnType("smallint");

                    b.Property<string>("value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("productFeatureGroupId");

                    b.ToTable("ProductFeature");

                    b.HasData(
                        new
                        {
                            id = (short)1,
                            productFeatureGroupId = (short)1,
                            value = "Satılık"
                        },
                        new
                        {
                            id = (short)2,
                            productFeatureGroupId = (short)1,
                            value = "Kiralık"
                        },
                        new
                        {
                            id = (short)3,
                            productFeatureGroupId = (short)1,
                            value = "Günlük"
                        },
                        new
                        {
                            id = (short)4,
                            productFeatureGroupId = (short)2,
                            value = "Eşyalı"
                        },
                        new
                        {
                            id = (short)5,
                            productFeatureGroupId = (short)2,
                            value = "Eşyasız"
                        },
                        new
                        {
                            id = (short)6,
                            productFeatureGroupId = (short)3,
                            value = "1 + 0"
                        },
                        new
                        {
                            id = (short)7,
                            productFeatureGroupId = (short)3,
                            value = "1 + 1"
                        },
                        new
                        {
                            id = (short)8,
                            productFeatureGroupId = (short)3,
                            value = "2 + 1"
                        },
                        new
                        {
                            id = (short)9,
                            productFeatureGroupId = (short)3,
                            value = "3 + 1"
                        },
                        new
                        {
                            id = (short)10,
                            productFeatureGroupId = (short)3,
                            value = "3 + 2"
                        },
                        new
                        {
                            id = (short)11,
                            productFeatureGroupId = (short)3,
                            value = "4 + 2"
                        },
                        new
                        {
                            id = (short)12,
                            productFeatureGroupId = (short)4,
                            value = "Bahçe Katı"
                        },
                        new
                        {
                            id = (short)13,
                            productFeatureGroupId = (short)4,
                            value = "Giriş Katı"
                        },
                        new
                        {
                            id = (short)14,
                            productFeatureGroupId = (short)4,
                            value = "1. Kat"
                        },
                        new
                        {
                            id = (short)15,
                            productFeatureGroupId = (short)4,
                            value = "2. Kat"
                        },
                        new
                        {
                            id = (short)16,
                            productFeatureGroupId = (short)4,
                            value = "3. Kat"
                        },
                        new
                        {
                            id = (short)17,
                            productFeatureGroupId = (short)4,
                            value = "4 Kat"
                        },
                        new
                        {
                            id = (short)18,
                            productFeatureGroupId = (short)4,
                            value = "5. Kat"
                        },
                        new
                        {
                            id = (short)19,
                            productFeatureGroupId = (short)5,
                            value = "0"
                        },
                        new
                        {
                            id = (short)20,
                            productFeatureGroupId = (short)5,
                            value = "1"
                        },
                        new
                        {
                            id = (short)21,
                            productFeatureGroupId = (short)5,
                            value = "2"
                        },
                        new
                        {
                            id = (short)22,
                            productFeatureGroupId = (short)5,
                            value = "3"
                        },
                        new
                        {
                            id = (short)23,
                            productFeatureGroupId = (short)5,
                            value = "4"
                        },
                        new
                        {
                            id = (short)24,
                            productFeatureGroupId = (short)5,
                            value = "5"
                        },
                        new
                        {
                            id = (short)25,
                            productFeatureGroupId = (short)5,
                            value = "5-10"
                        },
                        new
                        {
                            id = (short)26,
                            productFeatureGroupId = (short)5,
                            value = "10-15"
                        },
                        new
                        {
                            id = (short)27,
                            productFeatureGroupId = (short)5,
                            value = "15-20"
                        },
                        new
                        {
                            id = (short)28,
                            productFeatureGroupId = (short)5,
                            value = "20>"
                        });
                });

            modelBuilder.Entity("Domain.Models.ProductFeatureGroup", b =>
                {
                    b.Property<short>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("id"));

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ProductFeatureGroup");

                    b.HasData(
                        new
                        {
                            id = (short)1,
                            value = "Emlak Tipi"
                        },
                        new
                        {
                            id = (short)2,
                            value = "Eşya Durumu"
                        },
                        new
                        {
                            id = (short)3,
                            value = "Oda Sayısı"
                        },
                        new
                        {
                            id = (short)4,
                            value = "Bulunduğu Kat"
                        },
                        new
                        {
                            id = (short)5,
                            value = "Bina Yaşı"
                        });
                });

            modelBuilder.Entity("Domain.Models.Product", b =>
                {
                    b.HasOne("Domain.Models.ProductFeature", "productFeature")
                        .WithMany("products")
                        .HasForeignKey("productFeatureid");

                    b.Navigation("productFeature");
                });

            modelBuilder.Entity("Domain.Models.ProductFeature", b =>
                {
                    b.HasOne("Domain.Models.ProductFeatureGroup", null)
                        .WithMany("productFeatures")
                        .HasForeignKey("productFeatureGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Models.ProductFeature", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("Domain.Models.ProductFeatureGroup", b =>
                {
                    b.Navigation("productFeatures");
                });
#pragma warning restore 612, 618
        }
    }
}
